package com.ftf.controller;

import java.util.Enumeration;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ftf.model.CardDetails;
import com.ftf.model.CustomerInformation;
import com.ftf.model.VisitorUser;
import com.ftf.service.LoginService;
import com.ftf.service.PaypalInfoService;
import com.ftf.validator.SignInValidator;

/**
 * @author Praveen Raghuvanshi
 * 
 */
@Controller
public class LoginController {
	private static final Logger logger = Logger
			.getLogger(LoginController.class);

	@Autowired
	private LoginService loginService;

	@Autowired
	private SignInValidator signInValidator;

	@Autowired
	private PaypalInfoService paypalInfoService;

	/**
	 * showSignIn method for show SignIn page. signInAction method use for
	 * validate user is Valid and Invalid VisitorUser is model
	 */
	@RequestMapping("/signIn")
	public String showSignIn(Map<String, Object> map, Model model) {
		map.put("VisitorUser", new VisitorUser());
		map.put("CustomerInformation", new CustomerInformation());
		return "signIn";
	}

	@RequestMapping(value = "/userSignIn", method = RequestMethod.POST)
	public String signInAction(
			@ModelAttribute("VisitorUser") VisitorUser visitorUser,
			@ModelAttribute("CustomerInformation") CustomerInformation login,
			BindingResult result, ModelMap model, Map<String, Object> map,
			HttpServletRequest request, HttpServletResponse response) {
		logger.info("---Inside a Login Method---");
		signInValidator.validate(login, result);
		if (result.hasErrors()) {
			return "signIn";
		}
		login = loginService.userSignIn(login);
		if (login == null) {
			return "redirect:/signIn.do";
		}
		HttpSession session = request.getSession();
		session.setAttribute("login", login);
		return "redirect:/businessUpdate.do";
	}

	@RequestMapping("/logout")
	public String showLogout(Map<String, Object> map, Model model,
			HttpServletRequest request) {
		System.out.println("Login Controller for logout");
		HttpSession session = request.getSession();
		session.invalidate();
		return "redirect:/signIn.do";
	}

	/**
	 * Method for Home page after a login user.
	 */
	@RequestMapping("/home")
	public String home(Map<String, Object> map, Model model) {
		map.put("VisitorUser", new VisitorUser());
		return "home";
	}

	/**
	 * testNotify and success Method for paypal integration testing
	 */
	@RequestMapping("/testNotify")
	public String testNotify(Map<String, Object> map, Model model) {
		map.put("VisitorUser", new VisitorUser());
		System.out.println("---Inside a testNotify method Controller---");
		return "testNotify";
	}

	@RequestMapping("/success")
	public String success(Map<String, Object> map, Model model) {
		map.put("VisitorUser", new VisitorUser());
		System.out.println("---Inside a success method Controller--- ");
		return "success";
	}

	@RequestMapping("/file")
	public String file(Map<String, Object> map, Model model) {
		map.put("VisitorUser", new VisitorUser());
		return "file";
	}

	@RequestMapping(value = "/testDemo", method = RequestMethod.POST)
	public String seach(
			@ModelAttribute("VisitorUser") VisitorUser visitorUser,
			@ModelAttribute("CustomerInformation") CustomerInformation customerInformation,
			@ModelAttribute("CardDetails") CardDetails cardDetails,
			BindingResult result, ModelMap model, Map<String, Object> map,
			HttpServletRequest request) {
		System.out.println("....Inside a testDemo Controller....");
		try {
			// read post from PayPal system and add 'cmd'
			Enumeration en = request.getParameterNames();
			System.out.println("----Controller Start-----");
			if (request.getParameter("txn_id") != null) {
				String itemName = request.getParameter("item_name");
				String itemNumber = request.getParameter("item_number");
				String paymentStatus = request.getParameter("payment_status");
				String paymentAmount = request.getParameter("mc_gross");
				String paymentCurrency = request.getParameter("mc_currency");
				String txnId = request.getParameter("txn_id");
				String receiverEmail = request.getParameter("receiver_email");
				String payerEmail = request.getParameter("payer_email");
				String date = request.getParameter("payment_date");
				String txnType = request.getParameter("txn_type");
				String Name = request.getParameter("first_name");
				System.out.println("---Transaction Id----" + txnId);
				System.out.println("---payerEmail----" + payerEmail);
				System.out.println("---paymentStatus----" + paymentStatus);
				System.out.println("---date----" + date);
				System.out.println("---Transaction Type----" + txnType);
				System.out.println("---Buyer Name----" + Name);
				System.out.println("----Controller END-----");
				cardDetails.setCardName(Name);
				cardDetails.setTransaction(txnId);
				cardDetails.setPaymentStatus(paymentStatus);
				cardDetails.setPaymentDate(date);
				cardDetails.setEmail(payerEmail);
				cardDetails.setPaymentAmount(paymentAmount);
				paypalInfoService.addPaypalInfo(cardDetails);
			} else {
				System.out.println("Invalid");
			}
		} catch (Exception e) {
			System.out.println("Exception in ipn response : " + e.getMessage());
			e.printStackTrace();
		}
		return "customerSignUp";
	}

}