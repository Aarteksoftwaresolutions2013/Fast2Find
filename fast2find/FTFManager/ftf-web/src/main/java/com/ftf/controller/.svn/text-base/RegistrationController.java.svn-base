package com.ftf.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ftf.model.BusinessInformation;
import com.ftf.model.Country;
import com.ftf.model.CustomerInformation;
import com.ftf.model.VisitorUser;
import com.ftf.service.BusinessInfoService;
import com.ftf.service.CountryService;
import com.ftf.service.CustomerInfoService;
import com.ftf.validator.BusinessSignUpValidator;

@Controller
public class RegistrationController {
	@Autowired
	private CustomerInfoService customerInfoService;

	@Autowired
	private CountryService countryService;

	@Autowired
	private BusinessInfoService businessInfoService;
	
	@Autowired
	private BusinessSignUpValidator businessSignUpValidator;
	/**
	 * Show a customerSignUp page. Save Customer information using custInfoAdd
	 * method. getAllCountryName method use to get country name from a database.
	 */
	@RequestMapping("/customerSignUp")
	public String showCustomerSignUp(Map<String, Object> map, Model model) {
		map.put("VisitorUser", new VisitorUser());
		map.put("CustomerInformation", new CustomerInformation());
		List<Country> countryList = new ArrayList<Country>();
		countryList = countryService.getAllCountryName();
		if (countryList != null) {
			model.addAttribute("country", countryList);
		}
		return "customerSignUp";
	}

	@RequestMapping(value = "/customerInfo", method = RequestMethod.POST)
	public String customerInfo(
			@ModelAttribute("VisitorUser") VisitorUser visitorUser,
			@ModelAttribute("CustomerInformation") CustomerInformation customerInformation,
			BindingResult result, ModelMap model, Map<String, Object> map) {
		List<Country> countryList = new ArrayList<Country>();
		/*
		 * customerSignUpValidation.validate(customerInformation, result);
		 * if(result.hasErrors()) {
		 * countryList=countryService.getAllCountryName();
		 * model.addAttribute("country", countryList); return "customerSignUp";
		 * }
		 */

		countryList = countryService.getAllCountryName();
		if (countryList != null) {
			model.addAttribute("country", countryList);
		}
		model.put("CustomerInformation", new CustomerInformation());
		@SuppressWarnings("rawtypes")
		List list = null;
		list = customerInfoService.custInfoAdd(customerInformation);
		if (list.isEmpty()) {
			model.addAttribute("successMsg", "Registration Successfully");
		} else {
			model.addAttribute("successMsg", "You have all Ready Registered");
		}
		return "customerSignUp";
	}

	/**
	 * Method for show businessSignUp page. addBusinessInfo method save
	 * information like Business Info , Billing Address and Event Information
	 * getAllCountryName method for get all country name from data base.
	 */
	@RequestMapping("/businessSignUp")
	public String showBusinessSignUp(Map<String, Object> map, Model model) {
		map.put("VisitorUser", new VisitorUser());
		map.put("BusinessInformation", new BusinessInformation());
		List<Country> countryList = new ArrayList<Country>();
		countryList = countryService.getAllCountryName();
		if (countryList != null) {
			model.addAttribute("country", countryList);
		}
		return "businessSignUp";
	}

	@RequestMapping(value = "/businessSignUpInfo", method = RequestMethod.POST)
	public String businessInfo(
			@ModelAttribute("VisitorUser") VisitorUser visitorUser,
			@ModelAttribute("BusinessInformation") BusinessInformation businessInformation,
			BindingResult result, ModelMap model, Map<String, Object> map) {
		List<Country> countryList = new ArrayList<Country>();
		businessSignUpValidator.validate(businessInformation, result);
		if (result.hasErrors()) {
			countryList = countryService.getAllCountryName();
			model.addAttribute("country", countryList);
			return "businessSignUp";
		}
		countryList = countryService.getAllCountryName();
		if (countryList != null) {
			model.addAttribute("country", countryList);
		}
		model.put("BusinessInformation", new BusinessInformation());
		@SuppressWarnings("rawtypes")
		List businessInfoList = null;
		businessInfoList = businessInfoService
				.addBusinessInfo(businessInformation);
		if (businessInfoList.isEmpty()) {
			model.addAttribute("successMsg", "Business Add Successfully");
		} else {
			model.addAttribute("successMsg", "You have all Ready Registered");
		}
		return "businessSignUp";
	}


}
